@version:3.13
@include "scl.conf"

#
# these options are suitable for.. what?
#
options {
    chain_hostnames(no);
    flush_lines(0);
    threaded(yes);
    use_fqdn(yes);
    keep_hostname(no);
    use-dns(yes);
    dns-cache-hosts(/etc/hosts);
    stats-freq(60);
    stats-level(0);
}; 

##################### SOURCES ##############################

source syslogng { internal(); };

source src {
{% if syslogng_tls_listener %}
    syslog(
        ip("127.0.0.1")
        port("1999")
        transport("tls")
        tls(
            key_file("/usr/home/{{ certgrinder_user }}/certificates/{{ ansible_nodename }}.key")
            cert_file("/usr/home/{{ certgrinder_user }}/certificates/{{ ansible_nodename }}.crt")
        )
    );
    syslog(
        ip("::1")
        port("1999")
        transport("tls")
        ip-protocol(6)
        tls(
            key_file("/usr/home/{{ certgrinder_user }}/certificates/{{ ansible_nodename }}.key")
            cert_file("/usr/home/{{ certgrinder_user }}/certificates/{{ ansible_nodename }}.crt")
        )
    );
{% endif %}
    network(
        ip("127.0.0.1")
        port(514)
        transport(udp)
        ip-protocol(4)
    );
    network(
        ip("::1")
        port(514)
        transport(udp)
        ip-protocol(6)
    );
};

##################### DESTINATIONS ##############################

# the local system syslog servers socket
destination localsyslog {
    unix-dgram("/var/run/log");
};

{% if syslogng_upstream_server or syslogng_upstream_elk %}
# network destination(s)
destination remote{
{% if syslogng_upstream_server %}
    syslog(
        "{{ syslogng_upstream_server }}"
        transport("tls")
        port(1999)
        tls(peer-verify(required-trusted))
        log-fifo-size(100000)
    );
{% endif %}
{% if syslogng_upstream_elk %}
    network(
        "127.0.0.1"
        port(5000)
        transport(udp)
        log-fifo-size(100000)
    );
{% endif %}
};
{% endif %}

{% if syslogng_plaintext_archive %}
# local file destination
destination file{
    file("/var/log/syslogng/${HOST}/${YEAR}-${MONTH}-${DAY}/${FACILITY}.log"
    template("${YEAR}-${MONTH}-${DAY} ${HOUR}:${MIN}:${SEC} ${TZ} ${HOST} [${FACILITY}.${LEVEL}] ${MESSAGE}\n")
    template-escape(no));
};
{% endif %}

##################### LOGGING ##############################

# send just the internal syslog-ng messages to the local system syslog
log { source(syslogng); destination(localsyslog); };

{% if syslogng_upstream_server or syslogng_upstream_elk %}
# send to the network destination(s)
log { source(src); source(syslogng); destination(remote); flags(flow-control); };
{% endif %}
{% if syslogng_plaintext_archive %}
# log to file destination
log { source(src); source(syslogng); destination(file); flags(flow-control); };
{% endif %}

