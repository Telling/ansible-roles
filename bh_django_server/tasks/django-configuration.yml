---
- include_vars: "/usr/local/etc/ansible/host_vars/{{ ansible_nodename }}-secrets.yml"
  tags:
    - always

- name: "Get environment_settings.py.dist file from remote repo"
  fetch:
    src: "{{ django_root }}/{{ django_mainapp }}/environment_settings.py.dist"
    dest: "/tmp/environment_settings.py.dist"
    flat: yes
    fail_on_missing: yes
  tags:
    - codedeploy

- name: "Put environment_settings.py into place"
  template:
    src: "/tmp/environment_settings.py.dist"
    dest: "{{ django_root }}/{{ django_mainapp }}/environment_settings.py"
  tags:
    - codedeploy
  notify:
    - "restart django runworker instances using supervisorctl"
    - "restart django manage.py worker instances"

- name: "Delete temporary environment_settings.py.dist"
  file:
    path: "/tmp/environment_settings.py.dist"
    state: absent
  tags:
    - codedeploy

- name: "Run collectstatic"
  django_manage:
    command: "collectstatic"
    app_path: "{{ django_root }}"
    virtualenv: "{{ django_virtualenv_path }}"
  tags:
    - codedeploy

- name: "Create django media root directory"
  file:
    path: "{{ django_media_root }}"
    state: "directory"
    owner: "www"
    group: "www"
  tags:
    - codedeploy

- name: "Create django media root subdirectories"
  file:
    path: "{{ django_media_root }}/{{ item }}"
    state: "directory"
    owner: "www"
    group: "www"
  with_items: "{{ django_media_root_subdirs | default([]) }}"
  tags:
    - codedeploy

- name: "Create PDF archive directory"
  file:
    path: "{{ pdf_archive_path }}"
    state: "directory"
    owner: "www"
    group: "www"
  tags:
    - codedeploy

