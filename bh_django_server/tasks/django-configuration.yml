---
- include_vars: "/usr/local/etc/ansible/host_vars/{{ ansible_nodename }}-secrets.yml"
  tags:
    - always

- name: Get environment_settings.py.dist file from remote repo
  fetch:
    src: "{{ django_root }}/{{ django_mainapp }}/environment_settings.py.dist"
    dest: "/tmp/environment_settings.py.dist"
    flat: yes
    fail_on_missing: yes
  tags:
    - codedeploy

- name: Put environment_settings.py into place
  template:
    src: "/tmp/environment_settings.py.dist"
    dest: "{{ django_root }}/{{ django_mainapp }}/environment_settings.py.dist"
  tags:
    - codedeploy
- name: Delete temporary environment_settings.py.dist
  file:
    path: "/tmp/environment_settings.py.dist"
    state: absent

- name: Run collectstatic
  django_manage:
    command: collectstatic
    app_path: "{{ django_root }}"
    virtualenv: "{{ django_virtualenv_path }}"
  tags:
    - codedeploy

- name: Create django media root directory
  file:
    path: "{{ django_media_root }}"
    state: directory
    owner: www
    group: www

- name: Create django media root subdirectories
  file:
    path: "{{ django_media_root }}/{{ item }}"
    state: directory
    owner: www
    group: www
  with_items: "{{ django_media_root_subdirs }}"

- name: Copy djangomanage rc.d script
  template:
    src: djangomanage.j2
    dest: "/usr/local/etc/rc.d/djangomanage"
    owner: root
    group: wheel
    mode: "555"

- name: Configure djangomanage_path
  sysrc:
    name: djangomanage_path
    value: "{{ django_root }}/manage.py"

- name: Configure djangomanage_user
  sysrc:
    name: djangomanage_user
    value: "www"

- name: Configure djangomanage_group
  sysrc:
    name: djangomanage_group
    value: "www"

- name: Configure djangomanage_profiles
  sysrc:
    name: djangomanage_profiles
    value: "invoice"

- name: Configure djangomanage_invoice_args
  sysrc:
    name: djangomanage_invoice_args
    value: "invoice-worker"

- name: Configure djangomanage_invoice_logfile
  sysrc:
    name: djangomanage_invoice_logfile
    value: "/var/log/bornhack-invoice-worker.log"

- name: Enable djangomanage
  service:
    name: djangomanage
    enabled: yes

- name: Restart djangomanage workers
  service:
    name: djangomanage
    state: restarted
  tags:
    - codedeploy

