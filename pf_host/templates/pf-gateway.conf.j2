####################################################################################################
### THIS pf.conf IS MANAGED BY ANSIBLE, CHANGES WILL BE OVERWRITTEN!
####################################################################################################

####################################################################################################
################ options ###############################
set limit states 500000 # increased from default 10000
set limit frags 10000 # increased frm default 5000
set block-policy drop


####################################################################################################
################ macros ################################
{% for interface in pf.gateway_interfaces %}
{{ interface.macro }}="{{ interface.interface }}"
{% endfor %}

################ common address macros ###############
{{ pf.common_address_macros | default("# No common macros found") }}


################ macros specific to {{ ansible_nodename }} #######################
{{ pf.local_address_macros | default("# No local macros found") }}


###################################################################################################
############### scrubbing ##############################
scrub in on { {% for interface in pf.gateway_interfaces %}{% if interface.scrub %}${{ interface.macro }} {% endif %}{% endfor %}} all fragment reassemble


####################################################################################################
############### translation BINAT ########################
{% for binat in pf.gateway_binat_rules | default([]) %}
binat on ${{ binat.interface }} from {{ binat.inside }} -> {{ binat.outside }}
{% endfor %}

############### translation RDR ########################

############### translation NAT ########################

####################################################################################################
############### filtering ##############################
### block everything
block log all

### skip loopback interface(s)
set skip on lo0

### permit pfsync traffic on all sync interfaces (if any)
{% for if in pf.gateway_interfaces %}
{% if if.sync %}
pass quick on ${{ if.macro }} proto pfsync keep state (no-sync)
{% endif %}
{% endfor %}

### permit CARP traffic on all CARP interfaces (if any)
{% for if in pf.gateway_interfaces %}
{% if if.carp %}
pass quick on ${{ if.macro }} proto carp keep state (no-sync)
{% endif %}
{% endfor %}

### permit selected ICMP types on all interfaces
{% for if in pf.gateway_interfaces %}
pass in quick on ${{ if.macro }} inet proto icmp from any to (${{ if.macro }}) icmp-type { unreach, echoreq, timex }
{% endfor %}

#######################################################
# CUSTOM FILTER RULES BELOW HERE

{% for rule in pf.filter_rules %}
# {{ rule.comment }}
pass{% if rule.direction is defined %} {{ rule.direction }}{% endif %}{% if not rule.slow is defined %} quick{% endif %} on { {{ rule.interfaces | join(" ") }} }{% if rule.protocols is defined %} proto { {{ rule.protocols | join(" ") }} }{% endif %}{% if rule.sources is defined %} from { {{ rule.sources | join(" ") }} }{% endif %}{% if rule.destinations is defined %} to { {{ rule.destinations | join(" ") }} }{% endif %}{% if rule.ports is defined %} port { {{ rule.ports | join(" ") }} }{% endif %}{% if rule.tag %} tag {{ rule.tag }}{% endif %}

{% endfor %}

