---
- name: "Install nginx"
  pkgng:
    name: "nginx"
    state: "present"

- name: "Enable nginx"
  service:
    name: "nginx"
    enabled: "yes"

- name: "Copy nginx config"
  template:
    src: "nginx.conf.j2"
    dest: "/usr/local/etc/nginx/nginx.conf"

- name: "Copy nginx TLS config (nginx proxies only)"
  template:
    src: "tls.conf.j2"
    dest: "/usr/local/etc/nginx/tls.conf"
  when: nginx_proxy | default(False)

- name: "Copy nginx securityheaders.conf (nginx proxies only)"
  template:
    src: "securityheaders.conf.j2"
    dest: "/usr/local/etc/nginx/securityheaders.conf"
  when: nginx_proxy | default(False)

- name: "Copy nginx proxyheaders.conf (nginx proxies only)"
  template:
    src: "proxyheaders.conf.j2"
    dest: "/usr/local/etc/nginx/proxyheaders.conf"
  when: nginx_proxy | default(False)

- name: "Create nginx logfile directory"
  file:
    path: "/usr/local/www/logs"
    state: "directory"

- name: "Create nginx vhosts directory (nginx proxies only)"
  file:
    path: "/usr/local/etc/nginx/vhosts"
    state: "directory"
  when: nginx_proxy | default(False)

- name: "Create nginx certificates directory (nginx proxies only)"
  file:
    path: "/usr/local/etc/nginx/certificates"
    state: "directory"
  when: nginx_proxy | default(False)

- name: "Create dhparam (nginx proxies only)"
  shell: "/usr/local/bin/openssl dhparam 4096 > {{ nginx_dhparam_path }}"
  args:
    creates: "{{ nginx_dhparam_path }}"
  when: nginx_proxy | default(False)
 
- name: "Include nginx_extra_configs.yml where needed (nginx proxies only)"
  include_vars: "/usr/local/etc/ansible/host_vars/{{ ansible_nodename }}-nginx_extra_configs.yml"
  ignore_errors: yes
  when: nginx_proxy | default(False)

- name: "Create nginx extra include configs (acls and more) (nginx proxies only)"
  copy:
    owner: "root"
    group: "wheel"
    mode: "600"
    content: "{{ item.value.content }}"
    dest: "/usr/local/etc/nginx/{{ item.value.filename }}"
  with_dict: "{{ nginx_extra_configs | default({}) }}"
  when: nginx_proxy | default(False)

- name: "Include vhosts.yml to configure all vhosts (nginx proxies only)"
  include: "vhosts.yml"
  when: nginx_proxy | default(False)

- name: "Include secrets if present (nginx proxies only)"
  include_vars: "/usr/local/etc/ansible/host_vars/{{ ansible_nodename }}-secrets.yml"
  ignore_errors: yes
  when: nginx_proxy | default(False)

- name: "Create .htpasswd files (nginx proxies only)"
  copy:
    owner: "www"
    group: "www"
    mode: "600"
    content: "{{ item.value.content }}"
    dest: "/usr/local/etc/nginx/{{ item.value.filename }}"
  with_dict: "{{ nginx_htpasswd_files | default({}) }}"
  when: nginx_proxy | default(False)

- name: "Start Nginx (if not running)"
  service:
    name: "nginx"
    state: "started"

- name: "Reload nginx config"
  service:
    name: "nginx"
    state: "reloaded"

- name: "Copy nginx OCSP priming script (nginx proxies only)"
  copy:
    owner: "root"
    group: "wheel"
    mode: "755"
    src: "prime_nginx_ocsp.sh"
    dest: "/usr/local/bin/prime_nginx_ocsp.sh"
  when: nginx_proxy | default(False)

- name: "Run nginx ocsp priming script (nginx proxies only)"
  command: "/usr/local/bin/prime_nginx_ocsp.sh"
  when: nginx_proxy | default(False)

- name: "Make sure hourly cronjob for nginx ocsp priming is in place (nginx proxies only)"
  cron:
    name: "nginx ocsp priming script (every hour)"
    minute: "{{ 59 |random }}"
    job: "/usr/local/bin/prime_nginx_ocsp.sh"
    cron_file: "/etc/crontab"
    user: "nobody"
  when: nginx_proxy | default(False)

- name: "Make sure /usr/local/etc/newsyslog.conf.d/ exists"
  file:
    path: "/usr/local/etc/newsyslog.conf.d"
    state: "directory"

- name: "Make sure nginx newsyslog config file exists"
  copy:
    owner: "root"
    group: "wheel"
    mode: "755"
    src: "nginx-newsyslog.conf"
    dest: "/usr/local/etc/newsyslog.conf.d/nginx"

